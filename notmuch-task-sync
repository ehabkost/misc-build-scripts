#!/usr/bin/env python3

import sys, subprocess, json, logging

logger = logging.getLogger('notmuch-task-sync')
dbg = logger.debug
warn = logger.warning

tag_TODO = 'TODO'
tag_TaskCreated = 'TaskCreated'
tag_TaskDeleted = 'TaskDeleted'
tag_TaskCompleted = 'TaskCompleted'

args_new_tasks = ['+inbox']

def task_list(*args):
    cmd = ['task']
    cmd.extend(args)
    cmd.append('export')
    proc = subprocess.Popen(cmd, stdout=subprocess.PIPE)
    tasks = json.load(proc.stdout)
    proc.wait()
    return tasks

def notmuch_batch_tag(tags, queries):
    tag_process = subprocess.Popen(['notmuch', 'tag', '--batch'],
                                   stdin=subprocess.PIPE,
                                   encoding='utf-8')
    for q in queries:
        tag_cmd = ' '.join(f'+{t}' for t in tags)
        cmd = '%s -- %s' % (tag_cmd, q)
        dbg('cmd: %s', cmd)
        tag_process.stdin.write(cmd)
        tag_process.stdin.write('\n')
    tag_process.stdin.close()
    dbg('waiting for batch tag process')
    tag_process.wait()

def notmuch_search(*query, output='messages'):
    cmd = ['notmuch', 'search', '--format=json', f'--output={output}']
    cmd.extend(query)
    proc = subprocess.Popen(cmd, stdout=subprocess.PIPE)
    messages = json.load(proc.stdout)
    proc.wait()
    return messages

logging.basicConfig(level=logging.DEBUG, stream=sys.stderr)


# tag new tasks from TaskWarrior:
already_tagged = notmuch_search(f'tag:{tag_TODO} and tag:{tag_TaskCreated}')
pending_tasks = task_list('msgid.any:', '-COMPLETED', '-DELETED')
pending_msgids = [t['msgid'] for t in pending_tasks]
dbg("%d total tasks", len(pending_tasks))

not_tagged_msgids = [m for m in pending_msgids if m not in already_tagged]
dbg("%d messages not tagged yet", len(not_tagged_msgids))
for m in not_tagged_msgids:
    assert all(c not in m for c in (' ', '"', "'")), "invalid msgid: %s" % (m)
if not_tagged_msgids:
    notmuch_batch_tag((tag_TODO, tag_TaskCreated), ('id:%s' % (m) for m in not_tagged_msgids))

# create new tasks for messages recently tagged:
new_tasks = notmuch_search(f'tag:{tag_TODO} and not tag:{tag_TaskCreated}', output='summary')
dbg('%d new tasks', len(new_tasks))
for t in new_tasks:
    dbg('task: %r', t)
    thread_id = t['thread']
    msgids = notmuch_search(f'thread:{thread_id}')

    found = any(msgid in pending_msgids for msgid in msgids)
    if not found:
        msgid = msgids[0]
        dbg("creating task for msgid %s", msgid)
        subject = t['subject']
        task_add = ['task', 'add']
        task_add.extend(args_new_tasks)
        task_add.append(f'msgid:{msgid}')
        task_add.append(f'description:{subject}')
        dbg('cmd: %r', task_add)
        subprocess.run(task_add)
        subprocess.run(['notmuch', 'tag', f'-{tag_TODO}', f'thread:{thread_id} and not id:{msgid}'])
    subprocess.run(['notmuch', 'tag', f'+{tag_TaskCreated}', f'thread:{thread_id}'])

# untag messages for completed tasks:
for m in already_tagged:
    if m in pending_msgids:
        continue
    tasks = task_list(f'msgid:{m}')
    if not tasks:
        warn("can't find task for msgid:%s", m)
        continue
    for t in tasks:
        dbg('need to untag %s task: id:%s', t['status'], m)
        if t['status'] == 'deleted':
            subprocess.run(['notmuch', 'tag', f'+{tag_TaskDeleted}', f'-{tag_TODO}', f'id:{m}'])
        elif t['status'] == 'completed':
            subprocess.run(['notmuch', 'tag', f'+{tag_TaskCompleted}', f'-{tag_TODO}', f'id:{m}'])
        else:
            warn("I don't know what to do with %s task: id:%s", t['status'], m)